["^ ","~:output",["^ ","~:js","goog.provide('scherz.gravity');\ngoog.require('cljs.core');\ngoog.require('scherz.util');\nscherz.gravity.compress = (function scherz$gravity$compress(notes){\nwhile(true){\nif(cljs.core.truth_(cljs.core.some(((function (notes){\nreturn (function (p1__6067_SHARP_){\nreturn (p1__6067_SHARP_ < (12));\n});})(notes))\n,notes))){\nreturn notes;\n} else {\nvar G__6070 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (notes){\nreturn (function (p1__6068_SHARP_){\nreturn (p1__6068_SHARP_ - (12));\n});})(notes))\n,notes);\nnotes = G__6070;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Measures, from 0 to 1, how spatially close two sets of notes are.\n *   More half step resolutions results in higher gravity.\n */\nscherz.gravity.chord_gravity = (function scherz$gravity$chord_gravity(source_notes,target_notes){\nvar compress = (function (notes){\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$1(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__6069_SHARP_){\nreturn cljs.core.mod(p1__6069_SHARP_,(12));\n}),notes)));\n});\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(compress(source_notes),compress(target_notes))){\nreturn null;\n} else {\nreturn scherz.util.avg(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._SLASH_,(1)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(scherz.util.abs,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.not_EQ_,(0)),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core._,source_notes,target_notes)))));\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","scherz/gravity.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$scherz.gravity","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$scherz.util","^G","~$cljs.core","^H","~$goog","^I"],"~:seen",["^@",["~:require"]],"~:uses",["^ ","~$abs","^G","~$avg","^G"],"~:require-macros",["^ ","^H","^H"],"~:form",["~#list",["~$ns","^B",["^Q",["^K",["^G","~:refer",["^M","^N"]]]]]],"~:flags",["^ ","^K",["^@",[]]],"~:js-deps",["^ "],"~:deps",["^I","^H","^G"]],"^D","^B","~:resource-id",["~:shadow.build.classpath/resource","scherz/gravity.cljc"],"~:compiled-at",1566688690929,"~:resource-name","scherz/gravity.cljc","~:warnings",[],"~:source","(ns scherz.gravity\n  (:require [scherz.util :refer [abs avg]]))\n\n(defn compress\n  [notes]\n  (if (some #(< % 12) notes)\n    notes\n    (recur (map #(- % 12) notes))))\n\n\n(defn chord-gravity\n  \"Measures, from 0 to 1, how spatially close two sets of notes are.\n  More half step resolutions results in higher gravity.\"\n  [source-notes target-notes]\n  (let [compress (fn [notes] (sort (distinct (map #(mod % 12) notes))))]\n    (if (= (compress source-notes) (compress target-notes))\n      nil\n      (->> target-notes\n           (map - source-notes)\n           (filter (partial not= 0))\n           (map abs)\n           (map (partial / 1))\n           avg))))\n","~:reader-features",["^@",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;;AAGA,AAAA,AAAMA,AACHC;;AADH,AAEE,AAAI,AAAA,AAACE;AAADD;AAAA,AAAO,AAAAA,AAAA;;AAASD;AAClBA;;AACA,AAAO,AAAA,AAACI;AAADD;AAAA,AAAM,AAAAA,AAAA;;AAASH;;;;;;;AAG1B;;;;AAAA,AAAMK,AAGHC,AAAaC;AAHhB,AAIE,AAAMC,AAAS,AAAKR;AAAL,AAAY,AAACS,AAAK,AAACC,AAAS,AAAA,AAAAC,AAACP;AAAD,AAAM,AAAAO,AAAA,AAACC;AAAUZ;;AAA5D,AACE,AAAI,AAACa,AAAE,AAACL,AAASF,AAAc,AAACE,AAASD;AAAzC;;AAEE,AAAKA,AACA,AAACO,AAAIC,AAAET,AACP,AAACU,AAAO,AAAA,AAACC,AAAQC,AACjB,AAACd,AAAIe,AACL,AAACf,AAAI,AAAAgB,AAAA,AAACH,AACNI","names",["scherz.gravity/compress","notes","p1__6067#","cljs.core/some","p1__6068#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","scherz.gravity/chord-gravity","source-notes","target-notes","compress","cljs.core.sort.cljs$core$IFn$_invoke$arity$1","cljs.core.distinct.cljs$core$IFn$_invoke$arity$1","p1__6069#","cljs.core/mod","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.map.cljs$core$IFn$_invoke$arity$3","cljs.core/-","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","cljs.core/not=","scherz.util/abs","cljs.core//","scherz.util/avg"]]],"~:cache-keys",["~#cmap",[["^X","goog/math/math.js"],[1565449510000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^@",[]],"~:deps-syms",["^I","~$goog.array","~$goog.asserts"]]],["^X","goog/array/array.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","^1>"]]],["^X","goog/debug/error.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I"]]],["^X","goog/dom/nodetype.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I"]]],["^X","goog/object/object.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I"]]],"~:SHADOW-TIMESTAMP",[1565449511000,1565449509000],["^X","scherz/gravity.cljc"],[1566688642000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","^H","^G"]]],["^X","goog/math/long.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","^1>","~$goog.reflect"]]],["^X","goog/string/internal.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I"]]],["^X","goog/functions/functions.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I"]]],["^X","goog/structs/map.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^X","goog/asserts/asserts.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^X","goog/uri/uri.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","^1=","^1>","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^X","goog/base.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",[]]],["^X","goog/structs/structs.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","^1=","~$goog.object"]]],["^X","goog/string/string.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","~$goog.string.internal"]]],["^X","goog/reflect/reflect.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I"]]],["^X","goog/string/stringbuffer.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I"]]],["^X","goog/iter/iter.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","^1=","^1>","~$goog.functions","~$goog.math"]]],["^X","cljs/core.cljs"],[1565449509000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["~$goog.math.Long","~$goog.math.Integer","^1E","^1K","^1=","~$goog.Uri","~$goog.string.StringBuffer"]]],["^X","goog/math/integer.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I"]]],["^X","goog/uri/utils.js"],[1565449510000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","^1=","^1>","^1E"]]],["^X","scherz/util.cljc"],[1566685118000,"^19",["^ ","^1:",null,"^1;",["^@",[]],"^1<",["^I","^H"]]]]],"~:clj-info",["^ ","jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1565033122000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1565449508000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","scherz/gravity.cljc","^7",1,"^8",5,"^9",1,"^:",19],"^;",["^ ","^<","^="],"^>",null,"^?",["^@",[]],"^A","^B","^E",null,"^F",["^ ","^G","^G","^H","^H","^I","^I"],"^J",["^@",["^K"]],"^L",["^ ","^M","^G","^N","^G"],"~:defs",["^ ","~$compress",["^ ","~:protocol-inline",null,"^5",["^ ","^6","scherz/gravity.cljc","^7",4,"^8",7,"^9",4,"^:",15,"~:arglists",["^Q",["~$quote",["^Q",[["~$notes"]]]]]],"^A","~$scherz.gravity/compress","^6","scherz/gravity.cljc","^:",15,"~:method-params",["^Q",[["^2F"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^8",1,"~:variadic?",false,"^7",4,"^9",4,"~:max-fixed-arity",1,"~:fn-var",true,"^2D",["^Q",["^2E",["^Q",[["^2F"]]]]]],"~$chord-gravity",["^ ","^2C",null,"^5",["^ ","^6","scherz/gravity.cljc","^7",11,"^8",7,"^9",11,"^:",20,"^2D",["^Q",["^2E",["^Q",[["~$source-notes","~$target-notes"]]]]],"~:doc","Measures, from 0 to 1, how spatially close two sets of notes are.\n  More half step resolutions results in higher gravity."],"^A","~$scherz.gravity/chord-gravity","^6","scherz/gravity.cljc","^:",20,"^2H",["^Q",[["^2O","^2P"]]],"^2I",null,"^2J",["^Q",[null,null]],"^8",1,"^2K",false,"^7",11,"~:ret-tag",["^@",["~$number","~$clj-nil"]],"^9",11,"^2L",2,"^2M",true,"^2D",["^Q",["^2E",["^Q",[["^2O","^2P"]]]]],"^2Q","Measures, from 0 to 1, how spatially close two sets of notes are.\n  More half step resolutions results in higher gravity."]],"^O",["^ ","^H","^H"],"^T",["^ ","^K",["^@",[]]],"^U",["^ "],"^V",["^I","^H","^G"]],"^D","^B","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^18",[["^2X","~:static-fns"],true,["^2X","~:elide-asserts"],false,["^2X","~:optimize-constants"],null,["^2X","^["],null,["^2X","~:external-config"],null,["^2X","~:tooling-config"],null,["^2X","~:emit-constants"],null,["^2X","~:load-tests"],null,["^2X","~:infer-externs"],true,["^2X","^11"],null,["~:js-options","~:js-provider"],"^K",["~:mode"],"~:dev",["^2X","~:fn-invoke-direct"],null,["^2X","~:source-map"],"/dev/null"]]]