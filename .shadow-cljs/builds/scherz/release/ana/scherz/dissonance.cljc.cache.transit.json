["^ ","~:output",["^ ","~:js","goog.provide('scherz.dissonance');\nscherz.dissonance.exp = (function scherz$dissonance$exp(x,n){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n,x));\n});\nscherz.dissonance.gcd = (function scherz$dissonance$gcd(a,b){\nwhile(true){\nif((b === (0))){\nreturn a;\n} else {\nvar G__7873 = b;\nvar G__7874 = cljs.core.mod(a,b);\na = G__7873;\nb = G__7874;\ncontinue;\n}\nbreak;\n}\n});\nscherz.dissonance.multiply_ratio = (function scherz$dissonance$multiply_ratio(p__7845,scalar){\nvar map__7846 = p__7845;\nvar map__7846__$1 = (((((!((map__7846 == null))))?(((((map__7846.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__7846.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7846):map__7846);\nvar ratio = map__7846__$1;\nvar numerator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7846__$1,new cljs.core.Keyword(null,\"numerator\",\"numerator\",-160761104));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(ratio,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"numerator\",\"numerator\",-160761104),(numerator * scalar)], null));\n});\nscherz.dissonance.freq_ratios = (function (){var base_ratios = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(25),(24)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(9),(8)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(6),(5)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(4)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(3)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(45),(32)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(2)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(8),(5)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(3)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(9),(5)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(15),(8)], null)], null);\nvar add_octaves = ((function (base_ratios){\nreturn (function (p__7849){\nvar vec__7850 = p__7849;\nvar index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7850,(0),null);\nvar ratio = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7850,(1),null);\nreturn scherz.dissonance.multiply_ratio(ratio,scherz.dissonance.exp((2),scherz.util.floor((index / (12)))));\n});})(base_ratios))\n;\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(add_octaves,cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,cljs.core.range.cljs$core$IFn$_invoke$arity$0(),cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (base_ratios,add_octaves){\nreturn (function (p__7853){\nvar vec__7854 = p__7853;\nvar n = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7854,(0),null);\nvar d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7854,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"numerator\",\"numerator\",-160761104),n,new cljs.core.Keyword(null,\"denominator\",\"denominator\",-804365096),d], null);\n});})(base_ratios,add_octaves))\n,cljs.core.take.cljs$core$IFn$_invoke$arity$2((cljs.core.count(base_ratios) * (8)),cljs.core.cycle(base_ratios))))));\n})();\n/**\n * Converts a set of notes into frequency ratios above the lowest note.\n *   (chord->ratios '(0 4 7)) -> [5/4 3/2]\n */\nscherz.dissonance.chord__GT_ratios = (function scherz$dissonance$chord__GT_ratios(notes){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (note){\nvar G__7859 = (note - cljs.core.first(notes));\nreturn (scherz.dissonance.freq_ratios.cljs$core$IFn$_invoke$arity$1 ? scherz.dissonance.freq_ratios.cljs$core$IFn$_invoke$arity$1(G__7859) : scherz.dissonance.freq_ratios.call(null,G__7859));\n}),notes);\n});\nscherz.dissonance.lcm = (function scherz$dissonance$lcm(coll){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (a,b){\nreturn ((a * b) / scherz.dissonance.gcd(a,b));\n}),coll);\n});\n/**\n * Finds a least common multiple from a set of ratios.\n *   Major triads have the ratios [5/4 3/2] which is equivalent to [5/4 6/4].\n *   This is seen as a 4:5:6 which has a least common multiple of 60.\n */\nscherz.dissonance.lcm_of_ratios = (function scherz$dissonance$lcm_of_ratios(ratios){\nvar multiple = scherz.dissonance.lcm(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"denominator\",\"denominator\",-804365096),ratios));\nvar normalize_ratio = ((function (multiple){\nreturn (function (p__7862){\nvar map__7863 = p__7862;\nvar map__7863__$1 = (((((!((map__7863 == null))))?(((((map__7863.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__7863.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7863):map__7863);\nvar denominator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7863__$1,new cljs.core.Keyword(null,\"denominator\",\"denominator\",-804365096));\nvar numerator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7863__$1,new cljs.core.Keyword(null,\"numerator\",\"numerator\",-160761104));\nreturn (numerator * (multiple / denominator));\n});})(multiple))\n;\nreturn scherz.dissonance.lcm(cljs.core.map.cljs$core$IFn$_invoke$arity$2(normalize_ratio,ratios));\n});\nscherz.dissonance.prime_factors = (function scherz$dissonance$prime_factors(var_args){\nvar G__7868 = arguments.length;\nswitch (G__7868) {\ncase 1:\nreturn scherz.dissonance.prime_factors.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn scherz.dissonance.prime_factors.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nscherz.dissonance.prime_factors.cljs$core$IFn$_invoke$arity$1 = (function (n){\nreturn scherz.dissonance.prime_factors.cljs$core$IFn$_invoke$arity$2((2),n);\n});\n\nscherz.dissonance.prime_factors.cljs$core$IFn$_invoke$arity$2 = (function (f,n){\nwhile(true){\nif((f > Math.sqrt(n))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,(1))){\nreturn cljs.core.PersistentVector.EMPTY;\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null);\n}\n} else {\nif((cljs.core.mod(n,f) === (0))){\nreturn cljs.core.cons(f,scherz.dissonance.prime_factors.cljs$core$IFn$_invoke$arity$2(f,(n / f)));\n} else {\nvar G__7900 = (f + (1));\nvar G__7901 = n;\nf = G__7900;\nn = G__7901;\ncontinue;\n\n}\n}\nbreak;\n}\n});\n\nscherz.dissonance.prime_factors.cljs$lang$maxFixedArity = 2;\n\n/**\n * Measures dissonance of a chord based on Euler's Gradus Suavitatis.\n */\nscherz.dissonance.chord_dissonance = (function scherz$dissonance$chord_dissonance(notes){\nreturn (cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__7869){\nvar vec__7870 = p__7869;\nvar prime = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7870,(0),null);\nvar exponent = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7870,(1),null);\nreturn (exponent * (prime - (1)));\n}),cljs.core.frequencies(scherz.dissonance.prime_factors.cljs$core$IFn$_invoke$arity$1(scherz.dissonance.lcm_of_ratios(scherz.dissonance.chord__GT_ratios(notes)))))) + (1));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","scherz/dissonance.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$scherz.dissonance","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$scherz.util","^G","~$cljs.core","^H","~$goog","^I"],"~:seen",["^@",["~:require"]],"~:uses",["^ ","~$map-vals","^G","~$chord-shapes","^G","~$scale-intervals","^G","~$floor","^G"],"~:require-macros",["^ ","^H","^H"],"~:form",["~#list",["~$ns","^B",["^S",["^K",["^G","~:refer",["^M","^N","^O","^P"]]]]]],"~:flags",["^ ","^K",["^@",[]]],"~:js-deps",["^ "],"~:deps",["^I","^H","^G"]],"^D","^B","~:resource-id",["~:shadow.build.classpath/resource","scherz/dissonance.cljc"],"~:compiled-at",1566598998688,"~:resource-name","scherz/dissonance.cljc","~:warnings",[],"~:source","(ns scherz.dissonance\n  (:require [scherz.util :refer [map-vals chord-shapes scale-intervals floor]]))\n\n(defn exp [x n]\n  (reduce * (repeat n x)))\n\n(defn- gcd [a b]\n  (if (zero? b)\n    a\n    (recur b (mod a b))))\n\n(defn multiply-ratio\n  [{numerator :numerator :as ratio} scalar]\n  (into ratio\n        {:numerator (* numerator scalar)}))\n\n(def freq-ratios\n  (let [base-ratios [[1 1] [25 24] [9 8] [6 5] [5 4] [4 3]\n                     [45 32] [3 2] [8 5] [5 3] [9 5] [15 8]]\n        add-octaves (fn [[index ratio]]\n                      (->> (/ index 12) floor (exp 2) (multiply-ratio ratio)))]\n    (->> (cycle base-ratios)\n         (take (* (count base-ratios) 8))\n         (map (fn [[n d]] {:numerator n :denominator d}))\n         (map vector (range))\n         (map add-octaves)\n         vec)))\n\n(defn- chord->ratios\n  \"Converts a set of notes into frequency ratios above the lowest note.\n  (chord->ratios '(0 4 7)) -> [5/4 3/2]\"\n  [notes]\n  (map (fn [note]\n         (->> (first notes) (- note) freq-ratios))\n       notes))\n\n(defn- lcm [coll]\n  (reduce (fn [a b]\n            (/ (* a b) (gcd a b)))\n          coll))\n\n(defn- lcm-of-ratios\n  \"Finds a least common multiple from a set of ratios.\n  Major triads have the ratios [5/4 3/2] which is equivalent to [5/4 6/4].\n  This is seen as a 4:5:6 which has a least common multiple of 60.\"\n  [ratios]\n  (let [multiple (lcm (map :denominator ratios))\n        normalize-ratio (fn [{:keys [denominator numerator]}]\n                          (->> denominator (/ multiple) (* numerator)))]\n    (lcm (map normalize-ratio ratios))))\n\n(defn prime-factors\n  ([n] (prime-factors 2 n))\n  ([f n]\n   (cond\n     (> f (Math/sqrt n)) (if (= n 1) [] [n])\n     (zero? (mod n f)) (cons f (prime-factors f (/ n f)))\n     :else (recur (inc f) n))))\n\n(defn chord-dissonance\n  \"Measures dissonance of a chord based on Euler's Gradus Suavitatis.\"\n  [notes]\n  (->> (chord->ratios notes)\n       lcm-of-ratios\n       prime-factors\n       frequencies\n       (map (fn [[prime exponent]] (* exponent (dec prime))))\n       (reduce +)\n       inc))\n","~:reader-features",["^@",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["scherz.dissonance/exp","x","n","cljs.core.reduce.cljs$core$IFn$_invoke$arity$2","cljs.core/*","cljs.core.repeat.cljs$core$IFn$_invoke$arity$2","scherz.dissonance/gcd","a","b","cljs.core/mod","p__7845","map__7846","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","scherz.dissonance/multiply-ratio","numerator","ratio","scalar","cljs.core.into.cljs$core$IFn$_invoke$arity$2","scherz.dissonance/freq-ratios","base-ratios","add-octaves","p__7849","vec__7850","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","index","scherz.util/floor","cljs.core/cycle","cljs.core.take.cljs$core$IFn$_invoke$arity$2","cljs.core/count","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__7853","vec__7854","d","cljs.core.map.cljs$core$IFn$_invoke$arity$3","cljs.core/vector","cljs.core.range.cljs$core$IFn$_invoke$arity$0","cljs.core/vec","scherz.dissonance/chord->ratios","notes","note","G__7859","cljs.core/first","scherz.dissonance/lcm","coll","scherz.dissonance/lcm-of-ratios","ratios","multiple","normalize-ratio","p__7862","map__7863","denominator","var_args","G__7868","scherz.dissonance/prime-factors","js/Error","scherz.dissonance.prime_factors.cljs$core$IFn$_invoke$arity$2","f","Math/sqrt","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/cons","scherz.dissonance/chord-dissonance","scherz.dissonance.prime_factors.cljs$core$IFn$_invoke$arity$1","cljs.core/frequencies","p__7869","vec__7870","prime","exponent","cljs.core/+"]]],"~:cache-keys",["~#cmap",[["^Z","goog/math/math.js"],[1565449510000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^@",[]],"~:deps-syms",["^I","~$goog.array","~$goog.asserts"]]],["^Z","goog/array/array.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","^1@"]]],["^Z","goog/debug/error.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I"]]],["^Z","goog/dom/nodetype.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I"]]],["^Z","goog/object/object.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I"]]],"~:SHADOW-TIMESTAMP",[1565449511000,1565449509000],["^Z","goog/math/long.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","^1@","~$goog.reflect"]]],["^Z","goog/string/internal.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I"]]],["^Z","goog/functions/functions.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I"]]],["^Z","goog/structs/map.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^Z","scherz/dissonance.cljc"],[1566527536000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","^H","^G"]]],["^Z","goog/asserts/asserts.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^Z","goog/uri/uri.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","^1?","^1@","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^Z","goog/base.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",[]]],["^Z","goog/structs/structs.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","^1?","~$goog.object"]]],["^Z","goog/string/string.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","~$goog.string.internal"]]],["^Z","goog/reflect/reflect.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I"]]],["^Z","goog/string/stringbuffer.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I"]]],["^Z","goog/iter/iter.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","^1?","^1@","~$goog.functions","~$goog.math"]]],["^Z","cljs/core.cljs"],[1565449509000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["~$goog.math.Long","~$goog.math.Integer","^1G","^1M","^1?","~$goog.Uri","~$goog.string.StringBuffer"]]],["^Z","goog/math/integer.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I"]]],["^Z","goog/uri/utils.js"],[1565449510000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","^1?","^1@","^1G"]]],["^Z","scherz/util.cljc"],[1566527536000,"^1;",["^ ","^1<",null,"^1=",["^@",[]],"^1>",["^I","^H"]]]]],"~:clj-info",["^ ","jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1565449508000,"jar:file:/Users/mochi/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1565449509000,"jar:file:/Users/mochi/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1565033122000,"jar:file:/Users/mochi/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1565449508000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","scherz/dissonance.cljc","^7",1,"^8",5,"^9",1,"^:",22],"^;",["^ ","^<","^="],"^>",null,"^?",["^@",[]],"^A","^B","^E",null,"^F",["^ ","^G","^G","^H","^H","^I","^I"],"^J",["^@",["^K"]],"~:shadow/js-access-global",["^@",["Error"]],"^L",["^ ","^M","^G","^N","^G","^O","^G","^P","^G"],"~:defs",["^ ","~$gcd",["^ ","~:protocol-inline",null,"^5",["^ ","^6","scherz/dissonance.cljc","^7",7,"^8",8,"^9",7,"^:",11,"~:private",true,"~:arglists",["^S",["~$quote",["^S",[["~$a","~$b"]]]]]],"^2G",true,"^A","~$scherz.dissonance/gcd","^6","scherz/dissonance.cljc","^:",11,"~:method-params",["^S",[["~$a","~$b"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"~:variadic?",false,"^7",7,"^9",7,"~:max-fixed-arity",2,"~:fn-var",true,"^2H",["^S",["^2I",["^S",[["~$a","~$b"]]]]]],"~$freq-ratios",["^ ","^A","~$scherz.dissonance/freq-ratios","^6","scherz/dissonance.cljc","^7",17,"^8",1,"^9",17,"^:",17,"^5",["^ ","^6","scherz/dissonance.cljc","^7",17,"^8",6,"^9",17,"^:",17],"~:tag",["^@",["~$clj","~$cljs.core/IVector","~$any","~$cljs.core/MetaFn","~$clj-nil"]]],"~$chord-dissonance",["^ ","^2F",null,"^5",["^ ","^6","scherz/dissonance.cljc","^7",60,"^8",7,"^9",60,"^:",23,"^2H",["^S",["^2I",["^S",[["~$notes"]]]]],"~:doc","Measures dissonance of a chord based on Euler's Gradus Suavitatis."],"^A","~$scherz.dissonance/chord-dissonance","^6","scherz/dissonance.cljc","^:",23,"^2K",["^S",[["^2Z"]]],"^2L",null,"^2M",["^S",[null,null]],"^8",1,"^2N",false,"^7",60,"~:ret-tag","~$number","^9",60,"^2O",1,"^2P",true,"^2H",["^S",["^2I",["^S",[["^2Z"]]]]],"^2[","Measures dissonance of a chord based on Euler's Gradus Suavitatis."],"~$lcm-of-ratios",["^ ","^2F",null,"^5",["^ ","^6","scherz/dissonance.cljc","^7",42,"^8",8,"^9",42,"^:",21,"^2G",true,"^2H",["^S",["^2I",["^S",[["~$ratios"]]]]],"^2[","Finds a least common multiple from a set of ratios.\n  Major triads have the ratios [5/4 3/2] which is equivalent to [5/4 6/4].\n  This is seen as a 4:5:6 which has a least common multiple of 60."],"^2G",true,"^A","~$scherz.dissonance/lcm-of-ratios","^6","scherz/dissonance.cljc","^:",21,"^2K",["^S",[["^34"]]],"^2L",null,"^2M",["^S",[null,null]],"^8",1,"^2N",false,"^7",42,"^31","^2V","^9",42,"^2O",1,"^2P",true,"^2H",["^S",["^2I",["^S",[["^34"]]]]],"^2[","Finds a least common multiple from a set of ratios.\n  Major triads have the ratios [5/4 3/2] which is equivalent to [5/4 6/4].\n  This is seen as a 4:5:6 which has a least common multiple of 60."],"~$exp",["^ ","^2F",null,"^5",["^ ","^6","scherz/dissonance.cljc","^7",4,"^8",7,"^9",4,"^:",10,"^2H",["^S",["^2I",["^S",[["~$x","~$n"]]]]]],"^A","~$scherz.dissonance/exp","^6","scherz/dissonance.cljc","^:",10,"^2K",["^S",[["~$x","~$n"]]],"^2L",null,"^2M",["^S",[null,null]],"^8",1,"^2N",false,"^7",4,"^31","^2V","^9",4,"^2O",2,"^2P",true,"^2H",["^S",["^2I",["^S",[["~$x","~$n"]]]]]],"~$chord->ratios",["^ ","^2F",null,"^5",["^ ","^6","scherz/dissonance.cljc","^7",29,"^8",8,"^9",29,"^:",21,"^2G",true,"^2H",["^S",["^2I",["^S",[["^2Z"]]]]],"^2[","Converts a set of notes into frequency ratios above the lowest note.\n  (chord->ratios '(0 4 7)) -> [5/4 3/2]"],"^2G",true,"^A","~$scherz.dissonance/chord->ratios","^6","scherz/dissonance.cljc","^:",21,"^2K",["^S",[["^2Z"]]],"^2L",null,"^2M",["^S",[null,null]],"^8",1,"^2N",false,"^7",29,"^31","~$cljs.core/LazySeq","^9",29,"^2O",1,"^2P",true,"^2H",["^S",["^2I",["^S",[["^2Z"]]]]],"^2[","Converts a set of notes into frequency ratios above the lowest note.\n  (chord->ratios '(0 4 7)) -> [5/4 3/2]"],"~$multiply-ratio",["^ ","^2F",null,"^5",["^ ","^6","scherz/dissonance.cljc","^7",12,"^8",7,"^9",12,"^:",21,"^2H",["^S",["^2I",["^S",[[["^ ","~$numerator","~:numerator","~:as","~$ratio"],"~$scalar"]]]]]],"^A","~$scherz.dissonance/multiply-ratio","^6","scherz/dissonance.cljc","^:",21,"^2K",["^S",[["~$p__7845","^3@"]]],"^2L",null,"^2M",["^S",[null,null]],"^8",1,"^2N",false,"^7",12,"^31",["^@",[null,"^2T","^2V"]],"^9",12,"^2O",2,"^2P",true,"^2H",["^S",["^2I",["^S",[[["^ ","^3<","^3=","^3>","^3?"],"^3@"]]]]]],"~$lcm",["^ ","^2F",null,"^5",["^ ","^6","scherz/dissonance.cljc","^7",37,"^8",8,"^9",37,"^:",11,"^2G",true,"^2H",["^S",["^2I",["^S",[["~$coll"]]]]]],"^2G",true,"^A","~$scherz.dissonance/lcm","^6","scherz/dissonance.cljc","^:",11,"^2K",["^S",[["^3D"]]],"^2L",null,"^2M",["^S",[null,null]],"^8",1,"^2N",false,"^7",37,"^31","^2V","^9",37,"^2O",1,"^2P",true,"^2H",["^S",["^2I",["^S",[["^3D"]]]]]],"~$prime-factors",["^ ","^2F",null,"^5",["^ ","^6","scherz/dissonance.cljc","^7",52,"^8",7,"^9",52,"^:",20,"^2H",["^S",["^2I",["^S",[["~$n"],["~$f","~$n"]]]]],"~:top-fn",["^ ","^2N",false,"~:fixed-arity",2,"^2O",2,"^2K",["^S",[["~$n"],["~$f","~$n"]]],"^2H",["^S",[["~$n"],["~$f","~$n"]]],"^2M",["^S",[null,null]]]],"^A","~$scherz.dissonance/prime-factors","^6","scherz/dissonance.cljc","^:",20,"^3G",["^ ","^2N",false,"^3H",2,"^2O",2,"^2K",["^S",[["~$n"],["~$f","~$n"]]],"^2H",["^S",[["~$n"],["~$f","~$n"]]],"^2M",["^S",[null,null]]],"^2K",["^S",[["~$n"],["~$f","~$n"]]],"^2L",null,"^3H",2,"^2M",["^S",[null,null]],"^8",1,"^2N",false,"~:methods",[["^ ","^3H",1,"^2N",false,"^2S","^2V"],["^ ","^3H",2,"^2N",false,"^2S","^2T"]],"^7",52,"^9",52,"^2O",2,"^2P",true,"^2H",["^S",[["~$n"],["~$f","~$n"]]]]],"^Q",["^ ","^H","^H"],"~:cljs.analyzer/constants",["^ ","^J",["^@",["~:else","^3=","~:denominator"]],"~:order",["^3=","^3M","^3L"]],"^V",["^ ","^K",["^@",[]]],"^W",["^ "],"^X",["^I","^H","^G"]],"^D","^B","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1:",[["^3Q","~:static-fns"],true,["^3Q","~:elide-asserts"],true,["^3Q","~:optimize-constants"],null,["^3Q","^11"],null,["^3Q","~:external-config"],null,["^3Q","~:tooling-config"],null,["^3Q","~:emit-constants"],null,["^3Q","~:load-tests"],false,["^3Q","~:infer-externs"],true,["^3Q","^13"],null,["~:js-options","~:js-provider"],"^K",["~:mode"],"~:release",["^3Q","~:fn-invoke-direct"],null,["^3Q","~:source-map"],null]]]